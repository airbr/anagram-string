{"version":3,"sources":["src/variations.js","src/index.js"],"names":["isAnagram","str1","str2","length","console","log","createCharacterMap","text","map","char","toLowerCase","hasOwnProperty","str1map","str2map","module","exports","answer1","document","querySelector","wordsa","wordsb","addEventListener","value1","value","value2","textContent","setTimeout"],"mappings":";AA4CA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAvCA,SAASA,EAAUC,EAAMC,GAGpBD,GAAAA,IAASC,EACH,MAAA,UAGLD,GAAAA,EAAKE,SAAWD,EAAKC,OAEhB,OADPC,QAAQC,IAAI,2BACL,eAGAC,SAAAA,EAAmBC,GACtBC,IAD4B,EAC5BA,EAAM,GACOD,EAAAA,EAAAA,GAFe,IAET,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAdE,IAAAA,EAAc,EAAA,MACnBA,EAAOA,EAAKC,cACRF,EAAIG,eAAeF,GACnBD,EAAIC,KAEJD,EAAIC,GAAQ,GAPY,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAUzBD,OAAAA,EAGHI,IAAAA,EAAUN,EAAmBL,GAC7BY,EAAUP,EAAmBJ,GAI9B,IAAA,IAAIO,KAAQG,EACXA,GAAAA,EAAQH,KAAUI,EAAQJ,GACrB,MAAA,eAIJ,MAAA,WAGTK,OAAOC,QAAU,CAAEf,UAAAA;;ACdnB,aA9BA,IAAA,EAAA,QAAA,mBAIMgB,EAAUC,SAASC,cAAc,YAEjCC,EAASF,SAASC,cAAc,WAEhCE,EAASH,SAASC,cAAc,WAEtCC,EAAOE,iBAAiB,QAAS,WACzBC,IAAAA,EAASH,EAAOI,MAChBC,EAASJ,EAAOG,MACtBP,EAAQS,aAAc,EAAUH,EAAAA,WAAAA,EAAQE,KAG1CJ,EAAOC,iBAAiB,QAAS,WACzBC,IAAAA,EAASH,EAAOI,MAChBC,EAASJ,EAAOG,MACtBP,EAAQS,aAAc,EAAUH,EAAAA,WAAAA,EAAQE,KAG1CL,EAAOE,iBAAiB,QAAS,WAC/BK,WAAW,WACDJ,IAAAA,EAASH,EAAOI,MAChBC,EAASJ,EAAOG,MACtBP,EAAQS,aAAc,EAAUH,EAAAA,WAAAA,EAAQE,OAI9CJ,EAAOC,iBAAiB,QAAS,WAC/BK,WAAW,WACHJ,IAAAA,EAASH,EAAOI,MAChBC,EAASJ,EAAOG,MACtBP,EAAQS,aAAc,EAAUH,EAAAA,WAAAA,EAAQE","file":"src.58c8d6eb.js","sourceRoot":"..","sourcesContent":["/** \n * @param {string} string 1, \n * @param {string} string 2,\n * @return {string} result of anagram comparison\n */\nfunction isAnagram(str1, str2) {\n\n  // Earliest correct exit opportunity: identical strings are anagram\n  if(str1 === str2) {\n    return \"ANAGRAM\";\n  }\n  // Are the strings the same length? Exit if not;\n  if (str1.length !== str2.length) {\n    console.log('Strings not same length');\n    return \"NOT ANAGRAM!\";\n  }\n  // Function to create character map from a string\n  function createCharacterMap(text) {\n    let map = {};\n    for (let char of text) {\n        char = char.toLowerCase();\n        if (map.hasOwnProperty(char)) {\n            map[char]++;\n        } else {\n            map[char] = 1;\n        }\n    }\n    return map;\n  }\n  // Create Character Maps\n  const str1map = createCharacterMap(str1);\n  const str2map = createCharacterMap(str2);\n\n  // Is character in str1 in str2?\n  // NB: Issue of characters existing in str2 but not str1 addressed by string length check\n  for (let char in str1map) {\n    if (str1map[char] !== str2map[char]) {\n      return \"NOT ANAGRAM!\";\n    }\n  }\n \n  return \"ANAGRAM!\";\n}\n\nmodule.exports = { isAnagram };\n","import {\n  isAnagram\n} from \"./variations.js\";\n\nconst answer1 = document.querySelector(\"#answer1\");\n\nconst wordsa = document.querySelector(\"#wordsa\");\n\nconst wordsb = document.querySelector(\"#wordsb\");\n\nwordsa.addEventListener(\"keyup\", function() {\n  const value1 = wordsa.value;\n  const value2 = wordsb.value;\n  answer1.textContent = isAnagram(value1, value2);\n});\n\nwordsb.addEventListener(\"keyup\", function() {\n  const value1 = wordsa.value;\n  const value2 = wordsb.value;\n  answer1.textContent = isAnagram(value1, value2);\n});\n\nwordsa.addEventListener('paste', function() {\n  setTimeout(function() {\n      const value1 = wordsa.value;\n      const value2 = wordsb.value;\n      answer1.textContent = isAnagram(value1, value2);\n    });\n});\n\nwordsb.addEventListener('paste', function() {\n  setTimeout(function() {\n    const value1 = wordsa.value;\n    const value2 = wordsb.value;\n    answer1.textContent = isAnagram(value1, value2);\n    });\n});"]}